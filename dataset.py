import os
from PIL import Image
from torch.utils.data import Dataset
import numpy as np

EXCLUDES = ['573.png',
 '369.png',
 '147.png',
 '139.png',
 '410.png',
 '426.png',
 '100.png',
 '345.png',
 '208.png',
 '508.png',
 '217.png',
 '81.png',
 '564.png',
 '108.png',
 '474.png',
 '421.png',
 '312.png',
 '387.png',
 '471.png',
 '183.png',
 '349.png',
 '419.png',
 '88.png',
 '179.png',
 '96.png',
 '302.png',
 '127.png',
 '231.png',
 '273.png',
 '323.png',
 '52.png',
 '14.png',
 '113.png',
 '414.png',
 '406.png',
 '364.png',
 '307.png',
 '500.png',
 '493.png',
 '195.png',
 '496.png',
 '381.png',
 '482.png',
 '432.png',
 '340.png',
 '210.png',
 '440.png',
 '268.png',
 '336.png',
 '354.png',
 '571.png',
 '18.png',
 '367.png',
 '357.png',
 '225.png',
 '235.png',
 '400.png',
 '212.png',
 '529.png',
 '347.png',
 '244.png',
 '331.png',
 '588.png',
 '16.png',
 '599.png',
 '227.png',
 '171.png',
 '145.png',
 '372.png',
 '215.png',
 '523.png',
 '65.png',
 '181.png',
 '22.png',
 '416.png',
 '278.png',
 '309.png',
 '533.png',
 '539.png',
 '461.png',
 '262.png',
 '294.png',
 '37.png',
 '229.png',
 '137.png',
 '115.png',
 '315.png',
 '430.png',
 '266.png',
 '519.png',
 '191.png',
 '595.png',
 '378.png',
 '73.png',
 '296.png',
 '133.png',
 '188.png',
 '237.png',
 '7.png',
 '389.png',
 '233.png',
 '86.png',
 '590.png',
 '541.png',
 '305.png',
 '239.png',
 '166.png',
 '300.png',
 '486.png',
 '20.png',
 '535.png',
 '446.png',
 '334.png',
 '289.png',
 '247.png',
 '103.png',
 '130.png',
 '60.png',
 '25.png',
 '581.png',
 '123.png',
 '241.png',
 '455.png',
 '168.png',
 '221.png',
 '526.png',
 '391.png',
 '271.png',
 '502.png',
 '75.png',
 '459.png',
 '257.png',
 '554.png',
 '69.png',
 '206.png',
 '98.png',
 '159.png',
 '0.png',
 '78.png',
 '54.png',
 '551.png',
 '515.png',
 '282.png',
 '451.png',
 '90.png',
 '476.png',
 '575.png',
 '593.png',
 '28.png',
 '157.png',
 '110.png',
 '321.png',
 '491.png',
 '521.png',
 '125.png',
 '423.png',
 '362.png',
 '325.png',
 '199.png',
 '583.png',
 '93.png',
 '44.png',
 '412.png',
 '569.png',
 '385.png',
 '351.png',
 '193.png',
 '252.png',
 '173.png',
 '396.png',
 '463.png',
 '484.png',
 '121.png',
 '250.png',
 '197.png',
 '375.png',
 '35.png',
 '2.png',
 '510.png',
 '161.png',
 '442.png',
 '408.png',
 '498.png',
 '504.png',
 '469.png',
 '4.png',
 '50.png',
 '185.png',
 '284.png',
 '152.png',
 '30.png',
 '219.png',
 '449.png',
 '489.png',
 '119.png',
 '506.png',
 '83.png',
 '467.png',
 '329.png',
 '135.png',
 '317.png',
 '578.png',
 '465.png',
 '280.png',
 '560.png',
 '47.png']

class CarvanaDataset(Dataset):
    def __init__(self, image_dir, mask_dir, transform=None, excludes=EXCLUDES):
        self.image_dir = image_dir
        self.mask_dir = mask_dir
        self.transform = transform
        self.images = [f for f in os.listdir(image_dir) if not f in excludes]

    def __len__(self):
        return len(self.images)

    def __getitem__(self, index):
        img_path = os.path.join(self.image_dir, self.images[index])
        mask_path = os.path.join(self.mask_dir, self.images[index].replace(".jpg", "_mask.gif"))
        image = np.array(Image.open(img_path).convert("L"), dtype=np.float32)
        mask = np.array(Image.open(mask_path).convert("L"), dtype=np.float32)
        mask[mask == 255.0] = 1.0

        if self.transform is not None:
            augmentations = self.transform(image=image, mask=mask)
            image = augmentations["image"]
            mask = augmentations["mask"]

        return image, mask
